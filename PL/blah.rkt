#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 67 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 39 40 34 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 111 192 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 185 233 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 99 214 226 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 99 214 226 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 45 116 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 45 116 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 118 120 105 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 118 120 105 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 142 234 54 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 142 234 54 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 241 254 242 0 0 0 -1 -1 2
35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 241 254 242 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 254 254 238 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 254 254 238 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 174 94 222 0 0 0 -1 -1 2
49 #"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 174 94 222 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 251 254 240 0 0 0 -1 -1 2
42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 251 254 240 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 229 128 247 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 229 128 247 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 110 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 110 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 125 116 139 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 125 116 139 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 0 0 0 117 52 253 135 135 135 -1
-1 2 27 #"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 0 0 0 117 52 253 135 135 135 -1
-1 4 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 147 145 187 0 0 0 -1 -1 2
37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 147 145 187 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 0 0 0 159 55 253 122 122 122 -1
-1 2 38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 0 0 0 159 55 253 122 122 122 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 56 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
58 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 1543 0 32 3 11 #"#lang pl un"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 2 #" ("
0 0 14 3 3 #"All"
0 0 28 3 2 #" ("
0 0 14 3 1 #"A"
0 0 28 3 3 #") ("
0 0 14 3 6 #"Listof"
0 0 28 3 1 #" "
0 0 14 3 1 #"A"
0 0 28 3 3 #") ("
0 0 14 3 6 #"Listof"
0 0 28 3 1 #" "
0 0 14 3 1 #"A"
0 0 28 3 2 #") "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 7 #"Boolean"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 18 3 7 #";; blah"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 14 3 2 #"l1"
0 0 28 3 1 #" "
0 0 14 3 2 #"l2"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 1 #" "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 2 #"l1"
0 0 28 3 2 #") "
0 0 24 3 2 #"#t"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 2 #"l2"
0 0 28 3 2 #") "
0 0 24 3 2 #"#f"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 28 3 2 #" ("
0 0 14 3 5 #"first"
0 0 28 3 1 #" "
0 0 14 3 2 #"l1"
0 0 28 3 3 #") ("
0 0 14 3 5 #"first"
0 0 28 3 1 #" "
0 0 14 3 2 #"l2"
0 0 28 3 4 #")) ("
0 0 14 3 7 #"subseq?"
0 0 28 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 28 3 1 #" "
0 0 14 3 2 #"l1"
0 0 28 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 28 3 1 #" "
0 0 14 3 2 #"l2"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 14 3 2 #"l1"
0 0 28 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 28 3 1 #" "
0 0 14 3 2 #"l2"
0 0 28 3 5 #"))]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 3 #"() "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"0"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 2 #"11"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 3 #"not"
0 0 28 3 2 #" ("
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 3 #"not"
0 0 28 3 2 #" ("
0 0 14 3 7 #"subseq?"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 8 #"currify3"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 2 #" ("
0 0 14 3 3 #"All"
0 0 28 3 2 #" ("
0 0 14 3 1 #"A"
0 0 28 3 1 #" "
0 0 14 3 1 #"B"
0 0 28 3 1 #" "
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 14 3 1 #"D"
0 0 28 3 3 #") ("
0 0 14 3 1 #"A"
0 0 28 3 1 #" "
0 0 14 3 1 #"B"
0 0 28 3 1 #" "
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 1 #"D"
0 0 28 3 2 #") "
0 0 14 3 2 #"->"
0 0 28 3 2 #" ("
0 0 14 3 1 #"A"
0 0 28 3 1 #" "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 1 #"B"
0 0 28 3 1 #" "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 1 #"D"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 18 3 54 #";; convert a double-argument function to a curried one"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 8 #"currify3"
0 0 28 3 1 #" "
0 0 14 3 1 #"f"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" ("
0 0 14 3 1 #"x"
0 0 28 3 3 #") ("
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" ("
0 0 14 3 1 #"y"
0 0 28 3 3 #") ("
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" ("
0 0 14 3 1 #"z"
0 0 28 3 3 #") ("
0 0 14 3 1 #"f"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"z"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 1 #"a"
0 0 28 3 1 #" "
0 0 14 3 1 #"b"
0 0 28 3 1 #" "
0 0 14 3 1 #"c"
0 0 28 3 3 #") ("
0 0 14 3 1 #"+"
0 0 28 3 2 #" ("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"a"
0 0 28 3 1 #" "
0 0 14 3 1 #"b"
0 0 28 3 2 #") "
0 0 14 3 1 #"c"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 14 3 4 #"blah"
0 0 28 3 2 #" ("
0 0 14 3 8 #"currify3"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"((("
0 0 14 3 4 #"blah"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 2 #") "
0 0 24 3 1 #"4"
0 0 28 3 2 #") "
0 0 24 3 1 #"6"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 2 #"#|"
0 0 18 29 1 #"\n"
0 0 18 3 15 #"<ATOM> ::= <AB>"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"           | <BA>"
0 0 18 29 1 #"\n"
0 0 18 3 16 #"           | <C>"
0 0 18 29 1 #"\n"
0 0 18 3 16 #"<PAL> ::= <ATOM>"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"          | ( <ATOM> <ATOM> ...)"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 28 29 1 #"\n"
0 0 18 3 31 #";(define blank1 (list 660 100))"
0 0 28 29 1 #"\n"
0 0 18 3 18 #";(first \342\200\231blank1)"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 14 3 6 #"blank2"
0 0 28 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 28 3 5 #" () ("
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" ("
0 0 14 3 1 #"s"
0 0 28 3 2 #") "
0 0 24 3 3 #"660"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"(("
0 0 14 3 6 #"blank2"
0 0 28 3 2 #") "
0 0 20 3 3 #"\"2\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 14 3 6 #"blank3"
0 0 28 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 28 3 5 #" () ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 28 3 4 #" () "
0 0 24 3 3 #"660"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"(("
0 0 14 3 3 #"car"
0 0 28 3 2 #" ("
0 0 14 3 6 #"blank3"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 14 3 6 #"blank4"
0 0 28 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 28 3 4 #" () "
0 0 24 3 3 #"660"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 2 #"or"
0 0 28 3 2 #" ("
0 0 14 3 6 #"blank4"
0 0 28 3 3 #") ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 20 3 3 #"\"2\""
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 14 3 6 #"blank5"
0 0 28 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 28 3 4 #" () "
0 0 24 3 3 #"330"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 6 #"blank5"
0 0 28 3 2 #" ("
0 0 14 3 6 #"blank5"
0 0 28 3 5 #")]) ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 6 #"blank5"
0 0 28 3 1 #" "
0 0 24 3 3 #"330"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 11 #"define-type"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 3 #"Num"
0 0 28 3 2 #"  "
0 0 14 3 6 #"Number"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 3 #"Add"
0 0 28 3 2 #"  "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 3 #"Sub"
0 0 28 3 2 #"  "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 3 #"Mul"
0 0 28 3 2 #"  "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 3 #"Div"
0 0 28 3 2 #"  "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 2 #"Id"
0 0 28 3 3 #"   "
0 0 14 3 6 #"Symbol"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"With"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 3 #"Fun"
0 0 28 3 2 #"  "
0 0 14 3 6 #"Symbol"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"Call"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 2 #"])"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 5 #"Sexpr"
0 0 28 3 1 #" "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 18 3 39 #";; to convert s-expressions into FLANGs"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 5 #"match"
0 0 28 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 7 #"number:"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 6 #")    ("
0 0 14 3 3 #"Num"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 7 #"symbol:"
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 3 #") ("
0 0 14 3 2 #"Id"
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"with"
0 0 28 3 1 #" "
0 0 14 3 4 #"more"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 5 #"match"
0 0 28 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"       [("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"with"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 7 #"symbol:"
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 2 #") "
0 0 14 3 5 #"named"
0 0 28 3 2 #") "
0 0 14 3 4 #"body"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"With"
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 5 #"named"
0 0 28 3 3 #") ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 20 3 25 #"\"bad `with' syntax in ~s\""
0 0 28 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 28 3 4 #")])]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 4 #"more"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 5 #"match"
0 0 28 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"       [("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 3 #"fun"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 7 #"symbol:"
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 3 #")) "
0 0 14 3 4 #"body"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 3 #"Fun"
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 20 3 24 #"\"bad `fun' syntax in ~s\""
0 0 28 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 28 3 4 #")])]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 28 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 28 3 3 #") ("
0 0 14 3 3 #"Add"
0 0 28 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 28 3 3 #") ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 28 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 28 3 3 #") ("
0 0 14 3 3 #"Sub"
0 0 28 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 28 3 3 #") ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 28 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 28 3 3 #") ("
0 0 14 3 3 #"Mul"
0 0 28 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 28 3 3 #") ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"/"
0 0 28 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 28 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 28 3 3 #") ("
0 0 14 3 3 #"Div"
0 0 28 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 28 3 3 #") ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"call"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 3 #") ("
0 0 14 3 4 #"Call"
0 0 28 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 3 #") ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 1 #" "
0 0 20 3 18 #"\"bad syntax in ~s\""
0 0 28 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 28 3 4 #")]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"String"
0 0 28 3 1 #" "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 18 3 63
#";; parses a string containing a FLANG expression to a FLANG AST"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 14 3 3 #"str"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 11 #"parse-sexpr"
0 0 28 3 2 #" ("
0 0 14 3 13 #"string->sexpr"
0 0 28 3 1 #" "
0 0 14 3 3 #"str"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 2 #") "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 7 #"Boolean"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 5 #"cases"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Num"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #") "
0 0 24 3 2 #"#t"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Add"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #") ("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #") ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Sub"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #") ("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #") ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Mul"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #") ("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #") ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Div"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #") ("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #") ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"With"
0 0 28 3 1 #" "
0 0 14 3 8 #"bound-id"
0 0 28 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" [("
0 0 14 3 6 #"new-ls"
0 0 28 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 8 #"bound-id"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 3 1 #" "
0 0 14 3 6 #"new-ls"
0 0 28 3 3 #") ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 4 #")))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 2 #"Id"
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 2 #") "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"       [("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 2 #") "
0 0 24 3 2 #"#f"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"ormap"
0 0 28 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" ("
0 0 14 3 1 #"x"
0 0 28 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 3 #")) "
0 0 14 3 2 #"ls"
0 0 28 3 4 #")])]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Fun"
0 0 28 3 1 #" "
0 0 14 3 8 #"bound-id"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 3 2 #") "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" [("
0 0 14 3 6 #"new-ls"
0 0 28 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 8 #"bound-id"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 3 1 #" "
0 0 14 3 6 #"new-ls"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"Call"
0 0 28 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 28 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 28 3 3 #") ("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 3 #") ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 28 3 1 #" "
0 0 14 3 2 #"ls"
0 0 28 3 5 #"))]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 7 #"closed?"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #" "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 7 #"Boolean"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 18 3 64
#";; evaluates FLANG expressions by reducing them to *expressions*"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 7 #"closed?"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 4 #"help"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 4 #"()))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 7 #"closed?"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 20 3 9 #"\"{+ 1 2}\""
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 7 #"closed?"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 20 3 22 #"\"{with {x 5} {+ 1 2}}\""
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 7 #"closed?"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 20 3 19 #"\"{fun {x} {+ 1 x}}\""
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 7 #"closed?"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 20 3 35 #"\"{with {x 1} {with {y x} {+ x y}}}\""
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 3 #"not"
0 0 28 3 2 #" ("
0 0 14 3 7 #"closed?"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 20 3 9 #"\"{+ 1 x}\""
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 3 #"not"
0 0 28 3 2 #" ("
0 0 14 3 7 #"closed?"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 20 3 22 #"\"{with {x x} {+ 1 x}}\""
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #" "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 5 #"FLANG"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 18 3 64
#";; evaluates FLANG expressions by reducing them to *expressions*"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 5 #"cases"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Num"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #") "
0 0 14 3 4 #"expr"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Add"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #") ("
0 0 14 3 8 #"arith-op"
0 0 28 3 1 #" "
0 0 14 3 1 #"+"
0 0 28 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Sub"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #") ("
0 0 14 3 8 #"arith-op"
0 0 28 3 1 #" "
0 0 14 3 1 #"-"
0 0 28 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Mul"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #") ("
0 0 14 3 8 #"arith-op"
0 0 28 3 1 #" "
0 0 14 3 1 #"*"
0 0 28 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Div"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #") ("
0 0 14 3 8 #"arith-op"
0 0 28 3 1 #" "
0 0 14 3 1 #"/"
0 0 28 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"With"
0 0 28 3 1 #" "
0 0 14 3 8 #"bound-id"
0 0 28 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 14 3 4 #"eval"
0 0 28 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                  "
0 0 14 3 8 #"bound-id"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                  ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 28 3 4 #")))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 2 #"Id"
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 3 #") ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 20 3 21 #"\"free identifier: ~s\""
0 0 28 3 1 #" "
0 0 14 3 4 #"name"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 3 #"Fun"
0 0 28 3 1 #" "
0 0 14 3 8 #"bound-id"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 3 2 #") "
0 0 14 3 4 #"expr"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 4 #"Call"
0 0 28 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 28 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 4 #"fval"
0 0 28 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 28 3 3 #")])"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ("
0 0 16 3 5 #"cases"
0 0 28 3 1 #" "
0 0 14 3 4 #"fval"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"         [("
0 0 14 3 3 #"Fun"
0 0 28 3 1 #" "
0 0 14 3 8 #"bound-id"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"          ("
0 0 14 3 4 #"eval"
0 0 28 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 14 3 8 #"bound-id"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 28 3 4 #")))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 20 3 36 #"\"`call' expects a function, got: ~s\""
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 4 #"fval"
0 0 28 3 7 #")]))]))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 10 #"eval-lcall"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 5 #"cases"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 5 #"LCall"
0 0 28 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 28 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 4 #"fval"
0 0 28 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 28 3 3 #")])"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 5 #"cases"
0 0 28 3 1 #" "
0 0 14 3 4 #"fval"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"         [("
0 0 14 3 3 #"Fun"
0 0 28 3 1 #" "
0 0 14 3 8 #"bound-id"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"          ("
0 0 14 3 4 #"eval"
0 0 28 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 28 3 1 #" "
0 0 14 3 10 #"bound-body"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 14 3 8 #"bound-id"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 14 3 8 #"arg-expr"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"eval"
0 0 28 3 1 #" "
0 0 20 3 36 #"\"`call' expects a function, got: ~s\""
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 4 #"fval"
0 0 28 3 7 #")]))]))"
0 0 28 29 1 #"\n"
0           0
