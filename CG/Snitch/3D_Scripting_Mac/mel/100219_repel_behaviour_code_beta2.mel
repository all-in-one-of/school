/////////////////////////////////////////////////////////////////author: Patrick Drewello//Manchester School of Architecture//date:2010.02.16//function: set repel distance behaviours///////////////////////////////////////////////////////////////string $repel_obs [] = `ls -tr "REPEL*"`;string $loc_obs [] = `ls -tr "SH*"`;string $boundary [] = `ls -tr "Boundary"`;vector $DiffVec;		float $centreValue [] = `getAttr ($boundary[0] + ".center")`;	float $minValue[] = `getAttr ($boundary[0] + ".boundingBoxMin")`;	//define max and min values of site boundary	float $maxValue[] = `getAttr ($boundary[0] + ".boundingBoxMax")`; 	for ($ii=0;$ii<1;$ii++){	float $repel_coord [] = `getAttr ($repel_obs[$ii] + ".center")`;for ($i=0;$i<size($loc_obs);$i++){		float $loc_coord [] = `getAttr ($loc_obs[$i] + ".center")`;		vector $repel_vec = <<$repel_coord[0], $repel_coord[1], $repel_coord[2]>>;	vector $loc_vec = <<$loc_coord[0], $loc_coord[1], $loc_coord[2]>>;	$DiffVec = $loc_vec - $repel_vec;	float $distance_loc_repel = mag($DiffVec);	//print ($distance_loc_repel);	print ("\n");//	float $loc1_coord [] = `getAttr ($loc_obs[$i] + ".center")`;	float $loc2_coord [] = `getAttr ($loc_obs[$i+1] + ".center")`;	float $loc3_coord [] = `getAttr ($loc_obs[$i+2] + ".center")`;	float $loc4_coord [] = `getAttr ($loc_obs[$i+3] + ".center")`;	vector $loc1_vec = <<$loc1_coord[0], $loc1_coord[1], $loc1_coord[2]>>;	vector $loc2_vec = <<$loc2_coord[0], $loc2_coord[1], $loc2_coord[2]>>;	vector $loc3_vec = <<$loc3_coord[0], $loc3_coord[1], $loc3_coord[2]>>;	vector $loc4_vec = <<$loc4_coord[0], $loc4_coord[1], $loc4_coord[2]>>;	$DiffVec1 = $loc1_vec - $loc2_vec;	$DiffVec2 = $loc1_vec - $loc3_vec;	$DiffVec3 = $loc1_vec - $loc4_vec;	float $distance_loc_loc = mag($DiffVec1);	float $distance_loc_loc2 = mag($DiffVec2);	float $distance_loc_loc3 = mag($DiffVec3);		//print ($distance_loc_loc);	print ("\n");//		if ($distance_loc_loc > 3 && $distance_loc_loc2 > 3 && $distance_loc_loc3 > 3){		print "moving_";		select $loc_obs[$i];		move -r (($DiffVec1.x)*0.7) (($DiffVec1.y)*0.7) (($DiffVec1.z)*0.7);		move -r (($DiffVec2.x)*0.7) (($DiffVec2.y)*0.7) (($DiffVec2.z)*0.7);		move -r (($DiffVec3.x)*0.7) (($DiffVec3.y)*0.7) (($DiffVec3.z)*0.7);		}		$tim+=1;		currentTime ($tim);		setKeyframe -t ($tim) $loc_obs[$i];//		if ($distance_loc_repel < 15){		print "moving_";		select $loc_obs[$i];		move -r (($DiffVec.x)*1.05) (($DiffVec.y)*1.05) (($DiffVec.z)*1.05);		//		float $loc_coord_new [] = `getAttr ($loc_obs[$i] + ".center")`;		float $loc5_coord [] = `getAttr ($loc_obs[$i] + ".center")`;		vector $loc5_vec = <<$loc5_coord[0], $loc5_coord[1], $loc5_coord[2]>>;		vector $loc6_vec = <<$centreValue[0], $centreValue[1], $centreValue[2]>>;				$DiffVec4 = $loc5_vec - $loc6_vec;		float $distance_loc_centre = mag($DiffVec4);//				if (($loc_coord_new [0] < $maxValue [0] && $loc_coord_new [0] > $minValue [0]) && ($loc_coord_new [1] < $maxValue [1] && $loc_coord_new [1] > $minValue [1]) && ($loc_coord_new [2] < $maxValue [2] && $loc_coord_new [2] > $minValue [2])) {		print "_good_move_";		print "\n";		} else {		print "_not_good_";		move -r (($DiffVec4.x)*0.9) (($DiffVec4.y)*0.9) (($DiffVec4.z)*0.9);		}		$tim+=1;		currentTime ($tim);		setKeyframe -t ($tim) $loc_obs[$i];}}}