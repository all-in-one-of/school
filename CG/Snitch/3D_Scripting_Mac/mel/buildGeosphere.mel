global proc buildGeosphere ( float $radius, int $iterations ){

	float $goldenMean = ((sqrt(5)-1)/2) ;	vector $vert_01 = << 1, 0, $goldenMean >>;	vector $vert_02 = << $goldenMean, 1, 0 >>;	vector $vert_03 = << 1, 0, ((-1.0)*$goldenMean) >>;	vector $vert_04 = << $goldenMean, -1, 0 >>;	vector $vert_05 = << 0, ((-1.0)*$goldenMean), 1 >>;	vector $vert_06 = << 0, $goldenMean, 1 >>;	vector $vert_07 = << ((-1.0)*$goldenMean), 1, 0 >>;	vector $vert_08 = << 0, $goldenMean, -1 >>;	vector $vert_09 = << 0, ((-1.0)*$goldenMean), -1 >>;	vector $vert_10 = << ((-1.0)*$goldenMean), -1, 0 >>;	vector $vert_11 = << -1, 0, $goldenMean >>;	vector $vert_12 = << -1, 0, ((-1.0)*$goldenMean)>>;

        // To determine the vertex positions        // at the user radius        float $currRadius = $vert_01;
        float $scalar = ( $radius / $currRadius );

        $vert_01 = ( $vert_01 * $scalar );        $vert_02 = ( $vert_02 * $scalar );        $vert_03 = ( $vert_03 * $scalar );        $vert_04 = ( $vert_04 * $scalar );        $vert_05 = ( $vert_05 * $scalar );        $vert_06 = ( $vert_06 * $scalar );        $vert_07 = ( $vert_07 * $scalar );        $vert_08 = ( $vert_08 * $scalar );        $vert_09 = ( $vert_09 * $scalar );        $vert_10 = ( $vert_10 * $scalar );        $vert_11 = ( $vert_11 * $scalar );        $vert_12 = ( $vert_12 * $scalar );	string $surf_01[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_01.x) ($vert_01.y) ($vert_01.z)						-point ($vert_03.x) ($vert_03.y) ($vert_03.z)						-point ($vert_02.x) ($vert_02.y) ($vert_02.z)					`					;	string $surf_02[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_01.x) ($vert_01.y) ($vert_01.z)						-point ($vert_04.x) ($vert_04.y) ($vert_04.z)						-point ($vert_03.x) ($vert_03.y) ($vert_03.z)					`					;	string $surf_03[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_01.x) ($vert_01.y) ($vert_01.z)						-point ($vert_05.x) ($vert_05.y) ($vert_05.z)						-point ($vert_04.x) ($vert_04.y) ($vert_04.z)					`					;	string $surf_04[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_01.x) ($vert_01.y) ($vert_01.z)						-point ($vert_06.x) ($vert_06.y) ($vert_06.z)						-point ($vert_05.x) ($vert_05.y) ($vert_05.z)					`					;	string $surf_05[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_01.x) ($vert_01.y) ($vert_01.z)						-point ($vert_02.x) ($vert_02.y) ($vert_02.z)						-point ($vert_06.x) ($vert_06.y) ($vert_06.z)					`					;	string $surf_06[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_02.x) ($vert_02.y) ($vert_02.z)						-point ($vert_03.x) ($vert_03.y) ($vert_03.z)						-point ($vert_08.x) ($vert_08.y) ($vert_08.z)					`					;	string $surf_07[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_03.x) ($vert_03.y) ($vert_03.z)						-point ($vert_09.x) ($vert_09.y) ($vert_09.z)						-point ($vert_08.x) ($vert_08.y) ($vert_08.z)					`					;	string $surf_08[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_03.x) ($vert_03.y) ($vert_03.z)						-point ($vert_04.x) ($vert_04.y) ($vert_04.z)						-point ($vert_09.x) ($vert_09.y) ($vert_09.z)					`					;	string $surf_09[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_04.x) ($vert_04.y) ($vert_04.z)						-point ($vert_10.x) ($vert_10.y) ($vert_10.z)						-point ($vert_09.x) ($vert_09.y) ($vert_09.z)					`					;	string $surf_10[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_04.x) ($vert_04.y) ($vert_04.z)						-point ($vert_05.x) ($vert_05.y) ($vert_05.z)						-point ($vert_10.x) ($vert_10.y) ($vert_10.z)					`					;	string $surf_11[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_05.x) ($vert_05.y) ($vert_05.z)						-point ($vert_11.x) ($vert_11.y) ($vert_11.z)						-point ($vert_10.x) ($vert_10.y) ($vert_10.z)					`					;	string $surf_12[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_05.x) ($vert_05.y) ($vert_05.z)						-point ($vert_06.x) ($vert_06.y) ($vert_06.z)						-point ($vert_11.x) ($vert_11.y) ($vert_11.z)					`					;	string $surf_13[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_06.x) ($vert_06.y) ($vert_06.z)						-point ($vert_07.x) ($vert_07.y) ($vert_07.z)						-point ($vert_11.x) ($vert_11.y) ($vert_11.z)					`					;	string $surf_14[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_06.x) ($vert_06.y) ($vert_06.z)						-point ($vert_02.x) ($vert_02.y) ($vert_02.z)						-point ($vert_07.x) ($vert_07.y) ($vert_07.z)					`					;	string $surf_15[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_02.x) ($vert_02.y) ($vert_02.z)						-point ($vert_08.x) ($vert_08.y) ($vert_08.z)						-point ($vert_07.x) ($vert_07.y) ($vert_07.z)					`					;	string $surf_16[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_12.x) ($vert_12.y) ($vert_12.z)						-point ($vert_07.x) ($vert_07.y) ($vert_07.z)						-point ($vert_08.x) ($vert_08.y) ($vert_08.z)					`					;	string $surf_17[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_12.x) ($vert_12.y) ($vert_12.z)						-point ($vert_08.x) ($vert_08.y) ($vert_08.z)						-point ($vert_09.x) ($vert_09.y) ($vert_09.z)					`					;	string $surf_18[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_12.x) ($vert_12.y) ($vert_12.z)						-point ($vert_09.x) ($vert_09.y) ($vert_09.z)						-point ($vert_10.x) ($vert_10.y) ($vert_10.z)					`					;	string $surf_19[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_12.x) ($vert_12.y) ($vert_12.z)						-point ($vert_10.x) ($vert_10.y) ($vert_10.z)						-point ($vert_11.x) ($vert_11.y) ($vert_11.z)					`					;	string $surf_20[] = `polyCreateFacet						-constructionHistory off						-texture 1						-subdivision 1						-point ($vert_12.x) ($vert_12.y) ($vert_12.z)						-point ($vert_11.x) ($vert_11.y) ($vert_11.z)						-point ($vert_07.x) ($vert_07.y) ($vert_07.z)					`					;	string $united_poly[] = `polyUnite							-constructionHistory off$surf_01$surf_02							$surf_03							$surf_04							$surf_05							$surf_06							$surf_07							$surf_08							$surf_09							$surf_10							$surf_11							$surf_12							$surf_13							$surf_14							$surf_15							$surf_16							$surf_17						$surf_18							$surf_19							$surf_20						`;polyMergeVertex-distance 0.05-constructionHistory off($united_poly[0] + ".vtx[0:59]");select -replace $united_poly[0];rename $united_poly[0] "icosohedron1";

    if ( $iterations > 0 )        {            for ( $i = 0;$i < $iterations ;$i++ )                {                // Find how many edges and faces                // are in the geometry                int $numOfComponents[] =                     `polyEvaluate                         -edge                        -face                        $united_poly[0]`;                // Subdivide those edges                polySubdivideEdge                    -worldSpace 0                    -size 0                    -divisions 1                    -constructionHistory off                    ( $united_poly[0]                        + ".e[0:"                        + ( $numOfComponents[0] - 1 )                        + "]")                    ;                // Triangulate the faces                polyTriangulate                    -constructionHistory off                    ( $united_poly[0]                        + ".f[0:"                        + ( $numOfComponents[1] - 1 )                        + "]" )                    ;                 }        }

    // Find how many vertices are in the geometry    $numOfComponents = `polyEvaluate -vertex $united_poly[0]`;

    for ( $n = 0; $n < $numOfComponents[0]; $n++ )            {                float $tfa[] = `xform -query -worldSpace -translation ( $united_poly[0] + ".vtx[" + $n + "]" )`;                vector $v = << $tfa[0], $tfa[1], $tfa[2] >> ;                float $length = $v;                float $scale = ( $radius / $length );

                xform -worldSpace -translation ( $tfa[0] * $scale ) ( $tfa[1] * $scale ) ( $tfa[2] * $scale ) ( $united_poly[0] + ".vtx[" + $n + "]" ) ; 
            }}