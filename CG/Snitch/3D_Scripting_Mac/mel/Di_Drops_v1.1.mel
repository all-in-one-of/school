/* This file downloaded from Highend3d.com
''  
''  Highend3d.com File Information:
''  
''    Script Name: Di Drops
''    Author:  
''    Last Updated: Jun 02, 2009
''    Update/Change this file at:
''    http://Highend3d.com/maya/downloads/mel_scripts/dynamics/5781.html
''  
''  Please do not alter any information above this line
''  it is generated dynamically by Highend3d.com and will
''  be changed automatically on any updates.
*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////DI Drops 1.1//Developed by Dinesh Sehgal//--------------------------------------//USAGE://Helps in creating Water dripping effect. //For Curve Flow Emission, select any curve and click 'CurveFlow Emission' (There should be minimum 3 edit points on the curve)//For Point Emission, select any object or vertices and click 'Point Emission' (you can use 'Point Emission' to emit from all the points of curve)//Once you click that, particles will start dripping from the selected object.//Now select particle object and you will find all the controls in the channel box.//--------------------------------------//TIPS://For moving objects play with 'Inherit Factor'.///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////---- Curve Flow Emission------------------------------------------------------------------------------------//------------------------------------------------------------------------------------------------------------global proc di_curveFlow(){//store selected :string $di_Selected[];$di_Selected =`ls -sl`;string $di_SelectedShapes[] = `listRelatives -s $di_Selected`;//rebuild curve :rebuildCurve -ch 1 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 0 -d 3 -tol 0.00393701 $di_Selected;select $di_Selected[0];//create emitter:string $di_curvEmitter[] = `emitter -type curve -r 100 -sro 0 -nuv 0 -cye none -cyi 1 -spd 1 -srn 0 -nsp 1 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0`;string $di_Particles[] = `particle`;connectDynamic -em $di_curvEmitter[1] $di_Particles[0];goal -w 1 -utr 0 -g $di_SelectedShapes[0]  $di_Particles[0];//edit particle attributes:setAttr ($di_Particles[1]+".lifespanMode") 3;setAttr ($di_Particles[1]+".particleRenderType") 7;addAttr -is true -ln "threshold" -at "float" -min 0 -max 10 -dv 0 $di_Particles[1];addAttr -is true -ln "radius" -at "float" -min 0 -max 20 -dv 1 $di_Particles[1];//create forces:string $di_Gravity[] = `gravity -pos 0 0 0 -m 9.8 -att 0 -dx 0 -dy -1 -dz 0  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5` ;connectDynamic -f $di_Gravity[0]  $di_Particles[0];// add per particle attributes:addAttr -ln goalU -dt doubleArray  $di_Particles[1];addAttr -ln goalU0 -dt doubleArray  $di_Particles[1];addAttr -ln goalV -dt doubleArray $di_Particles[1];addAttr -ln goalV0 -dt doubleArray $di_Particles[1];addAttr -ln radiusPP -dt doubleArray $di_Particles[1];addAttr -ln radiusPP0 -dt doubleArray $di_Particles[1];string $di_Strng1 = "_magnitude0";string $di_Strng2 = "_magnitude";string $di_Strng3 =  $di_Gravity[0]+$di_Strng1;string $di_Strng4 =  $di_Gravity[0]+$di_Strng2;addAttr -ln $di_Strng3  -dt doubleArray  $di_Particles[1];addAttr -ln $di_Strng4  -dt doubleArray  $di_Particles[1];setAttr -e-keyable true ($di_Particles[1]+"."+$di_Strng4);addAttr -ln "speedPP"  -dt doubleArray  $di_Particles[1];setAttr -e-keyable true ($di_Particles[1]+".speedPP");string $di_rampName= `shadingNode -asTexture ramp`;string $di_arrayMapper[] = `arrayMapper -target $di_Particles[1] -destAttr speedPP -inputV ageNormalized -mt $di_rampName`;setAttr ($di_Particles[1]+".particleRenderType") 7;setAttr ($di_rampName+".colorEntryList[2].color") -type double3 0 0 0 ;setAttr ($di_rampName+".colorEntryList[2].position") 1;removeMultiInstance -break true ($di_rampName+".colorEntryList[1]");setAttr ($di_rampName+".colorEntryList[0].color") -type double3 1 1 1 ;setAttr ($di_rampName+".interpolation") 4;setAttr ($di_arrayMapper[0]+".minValue") 0.2;//lock and hide existing attributes in channel box:setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".tx");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".ty");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".tz");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".rx");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".ry");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".rz");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".sx");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".sy");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".sz");//add new attributes:addAttr -ln "rate"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".rate");addAttr -ln "Flow_Speed"  -at double  -min 1 -max 20 -dv 1 $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".Flow_Speed");addAttr -ln "gravity_min"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".gravity_min");addAttr -ln "gravity_max"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".gravity_max");addAttr -ln "radius_min"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".radius_min");addAttr -ln "radius_max"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".radius_max");addAttr -ln "threshold"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".threshold");// set default value of new attributes:setAttr ($di_Particles[0]+".gravity_min") 15;setAttr ($di_Particles[0]+".gravity_max") 30;setAttr ($di_Particles[0]+".radius_min") .1;setAttr ($di_Particles[0]+".radius_max") .3;setAttr ($di_Particles[0]+".rate") 15;setAttr ($di_Particles[0]+".threshold") .5;// add expression on emmission rate:string $exprsn1 = $di_curvEmitter[1]+".rate = "+ $di_Particles[0]+".rate;";expression -s $exprsn1  -o $di_curvEmitter[1] -ae 1 -uc all;// add per-particle expressions:string $exprsn2 = $di_Particles[1] +".threshold = " +$di_Particles[0] +".threshold;\r\nlifespanPP = rand(10,15)*(21-" +$di_Particles[0] + ".Flow_Speed);\r\nradiusPP = rand(" +$di_Particles[0] +".radius_min," +$di_Particles[0] +".radius_max);\r\ngoalU = 0;\r\n" +$di_Gravity[0] +"_magnitude = rand(" +$di_Particles[0] +".gravity_min," +$di_Particles[0] +".gravity_max);";string $exprsn3 = $di_Particles[1] + ".goalU += speedPP/((lifespanPP/10)*13);\r\nif (goalU>=1)\r\ngoalPP = 0;";dynExpression -s $exprsn2 -c $di_Particles[1];dynExpression -s $exprsn3 -rbd $di_Particles[1];select -r $di_Particles[0];}//-------------- Point Emission -------------------------------------------------------------------------------//-------------------------------------------------------------------------------------------------------------global proc di_pointEmission(){//create emitter:string $di_pointEmitter[] = `emitter -type omni -r 100 -sro 0 -nuv 0 -cye none -cyi 1 -spd 1 -srn 0 -nsp 1 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0`;string $di_Particles[] = `particle`;connectDynamic -em $di_pointEmitter[1] $di_Particles[0];//edit particle attributes:setAttr ($di_Particles[1]+".lifespanMode") 0;setAttr ($di_Particles[1]+".particleRenderType") 7;addAttr -is true -ln "threshold" -at "float" -min 0 -max 10 -dv 0 $di_Particles[1];addAttr -is true -ln "radius" -at "float" -min 0 -max 20 -dv 1 $di_Particles[1];//create forces:string $di_Gravity[] = `gravity -pos 0 0 0 -m 9.8 -att 0 -dx 0 -dy -1 -dz 0  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5` ;connectDynamic -f $di_Gravity[0]  $di_Particles[0];// add per particle attributes:addAttr -ln radiusPP -dt doubleArray $di_Particles[1];addAttr -ln radiusPP0 -dt doubleArray $di_Particles[1];string $di_Strng1 = "_magnitude0";string $di_Strng2 = "_magnitude";string $di_Strng3 =  $di_Gravity[0]+$di_Strng1;string $di_Strng4 =  $di_Gravity[0]+$di_Strng2;addAttr -ln $di_Strng3  -dt doubleArray  $di_Particles[1];addAttr -ln $di_Strng4  -dt doubleArray  $di_Particles[1];setAttr -e-keyable true ($di_Particles[1]+"."+$di_Strng4);setAttr ($di_pointEmitter[1]+".speed") 0;setAttr -l true ($di_pointEmitter[1]+".speed");//lock and hide existing attributes in channel box:setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".tx");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".ty");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".tz");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".rx");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".ry");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".rz");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".sx");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".sy");setAttr -lock true -keyable false -channelBox false ($di_Particles[0]+".sz");//add new attributes:addAttr -ln "rate"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".rate");addAttr -ln "gravity_min"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".gravity_min");addAttr -ln "gravity_max"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".gravity_max");addAttr -ln "spread"  -at double $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".spread");addAttr -ln "radius_min"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".radius_min");addAttr -ln "radius_max"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".radius_max");addAttr -ln "threshold"  -at double  $di_Particles[0];setAttr -e-keyable true ($di_Particles[0]+".threshold");// set default value of new attributes:setAttr ($di_Particles[0]+".gravity_min") 15;setAttr ($di_Particles[0]+".gravity_max") 30;setAttr ($di_Particles[0]+".radius_min") .1;setAttr ($di_Particles[0]+".radius_max") .3;setAttr ($di_Particles[0]+".rate") 20;setAttr ($di_Particles[0]+".spread") .3;setAttr ($di_Particles[0]+".threshold") .5;// add expression on emmission rate:string $exprsn1 = $di_pointEmitter[1]+".rate = "+ $di_Particles[0]+".rate;";string $exprsn2 = $di_pointEmitter[1]+".speedRandom = "+ $di_Particles[0]+".spread;";expression -s $exprsn1  -o $di_pointEmitter[1] -ae 1 -uc all;expression -s $exprsn2  -o $di_pointEmitter[1] -ae 1 -uc all;// add per-particle expressions:string $exprsn3 = $di_Particles[1]+".radiusPP = rand(" +$di_Particles[0] +".radius_min," +$di_Particles[0] +".radius_max);\r\n" +$di_Gravity[0] +"_magnitude = rand(" +$di_Particles[0] +".gravity_min," +$di_Particles[0] +".gravity_max);\r\nthreshold = " +$di_Particles[0] +".threshold;";dynExpression -s $exprsn3 -c $di_Particles[1];select -r $di_Particles[0];}//---------------UI----------------------------------------------------------------------------------//---------------------------------------------------------------------------------------------------global proc di_Drops(){if (`window -ex diDropsWin`) deleteUI diDropsWin;window -t "Di Drops 1.1" -w 350 -rtf 1 diDropsWin;columnLayout di_DropsMain;rowColumnLayout -numberOfColumns 1 -cw 1 450;textField -text "Select any object/vertex for 'Point Emission' or curve for 'CurveFlow Emission'" -ed 0 objectName;scriptJob -p "diDropsWin" -e "SelectionChanged" di_getObject;setParent..;rowColumnLayout -numberOfColumns 4 -cw 1 225 -cw 2 225 -cw 3 22 -cw 4 21;button -l "Point Emission" -bgc .5 1 .5 -c di_pointEmission;button -l "Curveflow Emission" -bgc .5 1 .5 -c di_curveFlow;setParent..;separator;separator;text -label "                                        -- developed by Dinesh Sehgal  --Contact: dins.sehgal@gmail.com";window -e -h 100 -w 450 diDropsWin;showWindow diDropsWin;}global proc di_getObject(){string $di_Selected[];$di_Selected = `ls -sl`;textField -e -text ($di_Selected[0]+" is in selection") objectName;if (size($di_Selected)==0)	{	textField -e -text "Select any object/vertex for 'Point Emission' or curve for 'CurveFlow Emission'" -ed 0 objectName;	}}di_Drops();